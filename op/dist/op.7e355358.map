{"version":3,"sources":["node_modules/whatwg-fetch/fetch.js","node_modules/isomorphic-fetch/fetch-npm-browserify.js","node_modules/onpushstate/index.js","node_modules/isarray/index.js","node_modules/path-to-regexp/index.js","node_modules/hyperhtml-app/index.js","node_modules/hyperhtml/esm/shared/constants.js","node_modules/hyperhtml/esm/shared/poorlyfills.js","node_modules/hyperhtml/esm/classes/Component.js","node_modules/hyperhtml/esm/objects/Intent.js","node_modules/hyperhtml/esm/shared/easy-dom.js","node_modules/hyperhtml/esm/shared/re.js","node_modules/hyperhtml/esm/shared/features-detection.js","node_modules/hyperhtml/esm/shared/utils.js","node_modules/hyperhtml/esm/classes/Wire.js","node_modules/hyperhtml/esm/objects/Path.js","node_modules/hyperhtml/esm/objects/Style.js","node_modules/hyperhtml/esm/shared/domdiff.js","node_modules/hyperhtml/esm/objects/Updates.js","node_modules/hyperhtml/esm/hyper/render.js","node_modules/hyperhtml/esm/hyper/wire.js","node_modules/hyperhtml/esm/index.js","node_modules/strict-uri-encode/index.js","node_modules/decode-uri-component/index.js","node_modules/query-string/index.js","index.ts"],"names":["G","document","defaultView","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","COMMENT_NODE","DOCUMENT_FRAGMENT_NODE","VOID_ELEMENTS","OWNER_SVG_ELEMENT","SVG_NAMESPACE","CONNECTED","DISCONNECTED","EXPANDO","SHOULD_USE_TEXT_CONTENT","UID","Math","random","Date","UIDC","Event","o_O","type","e","createEvent","initEvent","Map","keys","values","obj","indexOf","value","push","ID","WeakMap","key","defineProperty","WeakSet","wm","set","get","isArray","Array","toString","arr","call","trim","replace","Component","setup","content","children","create","Object","relate","Class","info","relation","w","p","defineProperties","context","id","component","createEntry","sm","prototype","ct","currentTarget","getAttribute","lazyGetter","defaultState","detail","_wire$","event","CustomEvent","dispatchEvent","childNodes","state","render","target","source","fn","secret","setValue","self","apply","arguments","attributes","intents","hasOwnProperty","length","intent","callback","object","i","node","doc","createElement","ownerDocument","fragment","createDocumentFragment","text","createTextNode","selfClosing","spaces","almostEverything","attrName","tagName","attrPartials","attrSeeker","RegExp","testFragment","hasAppend","hasContent","appendChild","hasDoomedCloneNode","cloneNode","hasImportNode","append","findAttributes","comments","$0","$1","$2","$3","replaceAttributes","createFragment","html","SVGFragment","HTMLFragment","clone","getChildren","nodeType","importNode","slice","unique","template","TL","t","propertyIsEnumerable","test","navigator","userAgent","parseFloat","T","k","join","TemplateMap","freeze","container","innerHTML","selector","querySelectorAll","createElementNS","firstChild","Wire","first","last","insert","df","remove","parentNode","removeChild","range","createRange","setStartBefore","setEndAfter","deleteContents","createPath","path","ownerElement","prepend","parent","unshift","name","IS_NON_DIMENSIONAL","original","isSVG","style","update","setAttributeNode","oldType","oldValue","newValue","cssText","toStyle","hyphen","ized","toLowerCase","css","domdiff","eqeq","a","b","identity","O","before","after","currentNodes","futureNodes","options","compare","currentStart","futureStart","currentEnd","currentStartNode","currentEndNode","futureEnd","futureStartNode","futureEndNode","insertBefore","nextSibling","index","f","el","pin","place","components","Cache","asHTML","asNode","item","constructor","canDiff","root","paths","updates","Path","find","setAnyContent","setAttribute","setTextContent","textContent","parts","child","shift","nodeName","cache","array","attribute","realName","len","removeAttribute","removeAttributeNode","script","replaceChild","invokeAtDistance","placeholder","resolve","then","String","any","Intent","invoke","isPromise_ish","diffOptions","fastPath","anyContent","concat","all","notObserving","observe","add","removeEventListener","addEventListener","owner","dispatchAll","nodes","dispatchTarget","has","MutationObserver","records","record","removedNodes","addedNodes","subtree","childList","bewitched","templates","wicked","upgrade","createTemplate","Updates","SC_RE","SC_PLACE","wire","wires","weakly","statics","bind","wireContent","wireNodes","hyper","define","HTML","diff","module","exports","str","encodeURIComponent","x","charCodeAt","toUpperCase","token","singleMatcher","multiMatcher","decodeComponents","split","decodeURIComponent","err","left","right","decode","input","tokens","match","customDecodeURIComponent","replaceMap","exec","result","entries","encodedURI","TypeError","strictUriEncode","require","decodeComponent","encoderForArrayFormat","arrayFormat","encode","parserForArrayFormat","accumulator","undefined","strict","keysSorter","sort","Number","map","extract","queryStart","parse","formatter","assign","ret","param","reduce","Boolean","stringify","value2","filter","parseUrl"],"mappings":"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","file":"op.7e355358.map","sourceRoot":"..","sourcesContent":["(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n","/*! (C) 2017 Andrea Giammarchi - @WebReflection - ISC License */\n/**\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\ndocument.addEventListener('click', function (e) {\n  // find the link node\n  var target = e.target;\n  var closest = target.closest || function (A) {\n    while (target && target.nodeName !== A) target = target.parentNode;\n    return target;\n  };\n  var anchor = closest.call(target, 'A');\n  if (\n    // it was found\n    anchor &&\n    // it's for the current page\n    /^(?:_self)?$/i.test(anchor.target) &&\n    // it's not a download\n    !anchor.hasAttribute('download') &&\n    // it's not a resource handled externally\n    anchor.getAttribute('rel') !== 'external'\n  ) {\n    // all states are simply fully resolved URLs\n    // pushstate will be the new page with old one as state\n    // popstate will be old page with previous one as state.\n    var next = new URL(anchor.href);\n    var curr = location;\n    // only if in the same origin\n    if (next.origin === curr.origin) {\n      // verify it's not just an anchor change\n      var redirect = next.pathname + next.search;\n      var hash = next.hash;\n      var scrollIntoView = true;\n      // in every case prevent the default action\n      e.preventDefault();\n      // but don't stop propagation, other listeners\n      // might want to be triggered regardless the history\n      if (redirect === (curr.pathname + curr.search)) {\n        // anchors should do what anchors do, only if valid\n        // https://www.w3.org/TR/html4/types.html#type-name\n        if (/^#[a-z][a-z0-9.:_-]+$/i.test(hash)) {\n          var target = document.querySelector(\n            hash + ',[name=\"' + hash.slice(1) + '\"]'\n          );\n          if (target) {\n            // verify if other listeners tried to prevent the default\n            e.preventDefault = function () { scrollIntoView = false; };\n            // after this event has captured and bubbled the DOM\n            setTimeout(function () {\n              // if nobody else prevented the default\n              // simulate what an anchor would've done\n              if (scrollIntoView) target.scrollIntoView(true);\n            });\n          }\n        }\n        // replace the history to ignore the popstate on anchor\n        history.replaceState(history.state, document.title, redirect + hash);\n      } else {\n        // trigger a new pushstate notification\n        var evt = new CustomEvent('pushstate');\n        evt.state = curr.href;\n        // being sure it happens after so the new location should be available\n        setTimeout(function () {\n          // dispatch the event\n          dispatchEvent(evt);\n          // also trigger Level 0 if possible\n          if (window.onpushstate) onpushstate(evt);\n        });\n        history.pushState(evt.state, document.title, redirect + hash);\n      }\n    }\n  }\n}, true);\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n","var hyperHTMLApp = (function () {'use strict';\n\n  var onpushstate = require('onpushstate');\n  var path2regexp = require('path-to-regexp');\n  var app = HyperHTMLApplication.prototype;\n\n  app.get = function get(path) {\n    for (var\n      keys = [],\n      re = asPath2RegExp(path, keys),\n      info = this._paths[re] || (this._paths[re] = {\n        keys: keys,\n        cb: [],\n        re: re\n      }),\n      i = 1, length = arguments.length;\n      i < length; i++\n    ) {\n      info.cb.push(arguments[i]);\n    }\n    return this;\n  };\n\n  app.delete = function del(path) {\n    for (var\n      re = asPath2RegExp(path, []),\n      info = this._paths[re],\n      i = 1, length = arguments.length;\n      i < length; i++\n    ) {\n      var cb = arguments[i];\n      var index = info ? info.cb.lastIndexOf(cb) : -1;\n      if (-1 < index) info.cb.splice(index, 1);\n    }\n    return this;\n  };\n\n  app.use = function use(mount, cb) {\n    for (var\n      paths = [].concat(mount),\n      i = 0, length = paths.length;\n      i < length; i++\n    ) {\n      this.get(paths[i], cb);\n    }\n    return this;\n  };\n\n  app.param = function param(name, cb) {\n    for (var\n      names = [].concat(name),\n      i = 0, length = names.length;\n      i < length; i++\n    ) {\n      this._params[names[i]] = cb;\n    }\n    return this;\n  };\n\n  app.navigate = function navigate(pathname, options) {\n    switch (true) {\n      case !!options:\n        switch (true) {\n          case !!options.replace:\n          case !!options.replaceState:\n            history.replaceState(history.state, document.title, pathname);\n            break;\n        }\n        break;\n      case pathname === (location.pathname + location.search):\n        this.handleEvent({type: 'samestate'});\n        break;\n      default:\n        var doc = document;\n        var html = doc.documentElement;\n        var navigator = doc.createElement('a');\n        navigator.href = pathname;\n        navigator.onclick = remove;\n        html.insertBefore(navigator, html.firstChild);\n        navigator.click();\n        break;\n    }\n    return this;\n  };\n\n  app.handleEvent = function handleEvent(e) {\n    var paths = this._paths;\n    for (var key in paths) {\n      if (paths.hasOwnProperty(key)) {\n        var info = paths[key];\n        var match = info.re.exec(location.pathname);\n        if (match) {\n          var invoked = [];\n          var keys = [];\n          var params = this._params;\n          var ctx = {\n            params: createParams(match, info.keys),\n            type: e.type\n          };\n          var i = 0;\n          var length = info.cb.length;\n          for (key in ctx.params) {\n            if (params.hasOwnProperty(key)) {\n              keys.push(key);\n            }\n          }\n          (function param() {\n            if (keys.length) {\n              key = keys.shift();\n              params[key](ctx, param, ctx.params[key]);\n            } else {\n              (function next() {\n                if (i < length) {\n                  var cb = info.cb[i++];\n                  if (invoked.lastIndexOf(cb) < 0) {\n                    invoked.push(cb);\n                    cb(ctx, next);\n                  } else {\n                    next();\n                  }\n                }\n              }());\n            }\n          }());\n          return;\n        }\n      }\n    }\n  };\n\n  function asPath2RegExp(path, keys) {\n    if (typeof path !== 'string') {\n      path = path.toString();\n      path = path.slice(1, path.lastIndexOf('/'));\n    }\n    return path2regexp(path, keys);\n  }\n\n  function createParams(match, keys) {\n    for (var\n      value,\n      params = {},\n      i = 1,\n      length = match.length;\n      i < length; i++\n    ) {\n      value = match[i];\n      if (value) params[keys[i - 1].name] = value;\n    }\n    return params;\n  }\n\n  function remove() {\n    this.parentNode.removeChild(this);\n  }\n\n  function HyperHTMLApplication() {\n    this._params = {};\n    this._paths = {};\n    global.addEventListener('popstate', this, false);\n    global.addEventListener('pushstate', this, false);\n  }\n\n  return function hyperHTMLApp() {\n    return new HyperHTMLApplication();\n  };\n\n}());\n\nmodule.exports = (global.hyperHTML || {}).app = hyperHTMLApp;\n","export const G = document.defaultView;\n\n// Node.CONSTANTS\n// 'cause some engine has no global Node defined\n// (i.e. Node, NativeScript, basicHTML ... )\nexport const ELEMENT_NODE = 1;\nexport const ATTRIBUTE_NODE = 2;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n\n// HTML related constants\nexport const VOID_ELEMENTS = /^area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr$/i;\n\n// SVG related constants\nexport const OWNER_SVG_ELEMENT = 'ownerSVGElement';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\n// Custom Elements / MutationObserver constants\nexport const CONNECTED = 'connected';\nexport const DISCONNECTED = 'dis' + CONNECTED;\n\n// hyperHTML related constants\nexport const EXPANDO = '_hyper: ';\nexport const SHOULD_USE_TEXT_CONTENT = /^style|textarea$/i;\nexport const UID = EXPANDO + ((Math.random() * new Date) | 0) + ';';\nexport const UIDC = '<!--' + UID + '-->';\n","import {G, UID} from './constants.js';\n\n// you know that kind of basics you need to cover\n// your use case only but you don't want to bloat the library?\n// There's even a package in here:\n// https://www.npmjs.com/package/poorlyfills\n\n// used to dispatch simple events\nlet Event = G.Event;\ntry {\n  new Event('Event');\n} catch(o_O) {\n  Event = function (type) {\n    const e = document.createEvent('Event');\n    e.initEvent(type, false, false);\n    return e;\n  };\n}\nexport {Event};\n\n// used to store template literals\n/* istanbul ignore next */\nexport const Map = G.Map || function Map() {\n  const keys = [], values = [];\n  return {\n    get(obj) {\n      return values[keys.indexOf(obj)];\n    },\n    set(obj, value) {\n      values[keys.push(obj) - 1] = value;\n    }\n  };\n};\n\n// used to store wired content\nlet ID = 0;\nexport const WeakMap = G.WeakMap || function WeakMap() {\n  const key = UID + ID++;\n  return {\n    get(obj) { return obj[key]; },\n    set(obj, value) {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        value\n      });\n    }\n  };\n};\n\n// used to store hyper.Components\nexport const WeakSet = G.WeakSet || function WeakSet() {\n  const wm = new WeakMap;\n  return {\n    add(obj) { wm.set(obj, true); },\n    has(obj) { return wm.get(obj) === true; }\n  };\n};\n\n// used to be sure IE9 or older Androids work as expected\nexport const isArray = Array.isArray || (toString =>\n  arr => toString.call(arr) === '[object Array]'\n)({}.toString);\n\nexport const trim = UID.trim || function () {\n  return this.replace(/^\\s+|\\s+$/g, '');\n};\n","import { Map, WeakMap } from '../shared/poorlyfills.js';\n\n// hyperHTML.Component is a very basic class\n// able to create Custom Elements like components\n// including the ability to listen to connect/disconnect\n// events via onconnect/ondisconnect attributes\n// Components can be created imperatively or declaratively.\n// The main difference is that declared components\n// will not automatically render on setState(...)\n// to simplify state handling on render.\nexport default function Component() {\n  return this; // this is needed in Edge !!!\n}\n\n// Component is lazily setup because it needs\n// wire mechanism as lazy content\nexport function setup(content) {\n  // there are various weakly referenced variables in here\n  // and mostly are to use Component.for(...) static method.\n  const children = new WeakMap;\n  const create = Object.create;\n  const createEntry = (wm, id, component) => {\n    wm.set(id, component);\n    return component;\n  };\n  const get = (Class, info, context, id) => {\n    const relation = info.get(Class) || relate(Class, info);\n    switch (typeof id) {\n      case 'object':\n      case 'function':\n        const wm = relation.w || (relation.w = new WeakMap);\n        return wm.get(id) || createEntry(wm, id, new Class(context));\n      default:\n        const sm = relation.p || (relation.p = create(null));\n        return sm[id] || (sm[id] = new Class(context));\n    }\n  };\n  const relate = (Class, info) => {\n    const relation = {w: null, p: null};\n    info.set(Class, relation);\n    return relation;\n  };\n  const set = context => {\n    const info = new Map;\n    children.set(context, info);\n    return info;\n  };\n  // The Component Class\n  Object.defineProperties(\n    Component,\n    {\n      // Component.for(context[, id]) is a convenient way\n      // to automatically relate data/context to children components\n      // If not created yet, the new Component(context) is weakly stored\n      // and after that same instance would always be returned.\n      for: {\n        configurable: true,\n        value(context, id) {\n          return get(\n            this,\n            children.get(context) || set(context),\n            context,\n            id == null ?\n              'default' : id\n          );\n        }\n      }\n    }\n  );\n  Object.defineProperties(\n    Component.prototype,\n    {\n      // all events are handled with the component as context\n      handleEvent: {value(e) {\n        const ct = e.currentTarget;\n        this[\n          ('getAttribute' in ct && ct.getAttribute('data-call')) ||\n          ('on' + e.type)\n        ](e);\n      }},\n      // components will lazily define html or svg properties\n      // as soon as these are invoked within the .render() method\n      // Such render() method is not provided by the base class\n      // but it must be available through the Component extend.\n      // Declared components could implement a\n      // render(props) method too and use props as needed.\n      html: lazyGetter('html', content),\n      svg: lazyGetter('svg', content),\n      // the state is a very basic/simple mechanism inspired by Preact\n      state: lazyGetter('state', function () { return this.defaultState; }),\n      // it is possible to define a default state that'd be always an object otherwise\n      defaultState: {get() { return {}; }},\n      // dispatch a bubbling, cancelable, custom event\n      // through the first known/available node\n      dispatch: {value(type, detail) {\n        const {_wire$} = this;\n        if (_wire$) {\n          const event = new CustomEvent(type, {\n            bubbles: true,\n            cancelable: true,\n            detail\n          });\n          event.component = this;\n          return (_wire$.dispatchEvent ?\n                    _wire$ :\n                    _wire$.childNodes[0]\n                  ).dispatchEvent(event);\n        }\n        return false;\n      }},\n      // setting some property state through a new object\n      // or a callback, triggers also automatically a render\n      // unless explicitly specified to not do so (render === false)\n      setState: {value(state, render) {\n        const target = this.state;\n        const source = typeof state === 'function' ? state.call(this, target) : state;\n        for (const key in source) target[key] = source[key];\n        if (render !== false)\n          this.render();\n        return this;\n      }}\n    }\n  );\n}\n\n// instead of a secret key I could've used a WeakMap\n// However, attaching a property directly will result\n// into better performance with thousands of components\n// hanging around, and less memory pressure caused by the WeakMap\nconst lazyGetter = (type, fn) => {\n  const secret = '_' + type + '$';\n  return {\n    get() {\n      return this[secret] || setValue(this, secret, fn.call(this, type));\n    },\n    set(value) {\n      setValue(this, secret, value);\n    }\n  };\n};\n\n// shortcut to set value on get or set(value)\nconst setValue = (self, secret, value) =>\n  Object.defineProperty(self, secret, {\n    configurable: true,\n    value: typeof value === 'function' ?\n      function () {\n        return (self._wire$ = value.apply(this, arguments));\n      } :\n      value\n  })[secret]\n;\n","const attributes = {};\nconst intents = {};\nconst keys = [];\nconst hasOwnProperty = intents.hasOwnProperty;\n\nlet length = 0;\n\nexport default {\n\n  // used to invoke right away hyper:attributes\n  attributes,\n\n  // hyperHTML.define('intent', (object, update) => {...})\n  // can be used to define a third parts update mechanism\n  // when every other known mechanism failed.\n  // hyper.define('user', info => info.name);\n  // hyper(node)`<p>${{user}}</p>`;\n  define: (intent, callback) => {\n    if (intent.indexOf('-') < 0) {\n      if (!(intent in intents)) {\n        length = keys.push(intent);\n      }\n      intents[intent] = callback;\n    } else {\n      attributes[intent] = callback;\n    }\n  },\n\n  // this method is used internally as last resort\n  // to retrieve a value out of an object\n  invoke: (object, callback) => {\n    for (let i = 0; i < length; i++) {\n      let key = keys[i];\n      if (hasOwnProperty.call(object, key)) {\n        return intents[key](object[key], callback);\n      }\n    }\n  }\n};\n","// these are tiny helpers to simplify most common operations needed here\nexport const create = (node, type) => doc(node).createElement(type);\nexport const doc = node => node.ownerDocument || node;\nexport const fragment = node => doc(node).createDocumentFragment();\nexport const text = (node, text) => doc(node).createTextNode(text);\n","// TODO:  I'd love to code-cover RegExp too here\n//        these are fundamental for this library\n\nconst spaces = ' \\\\f\\\\n\\\\r\\\\t';\nconst almostEverything = '[^ ' + spaces + '\\\\/>\"\\'=]+';\nconst attrName = '[ ' + spaces + ']+' + almostEverything;\nconst tagName = '<([A-Za-z]+[A-Za-z0-9:_-]*)((?:';\nconst attrPartials = '(?:=(?:\\'[^\\']*?\\'|\"[^\"]*?\"|<[^>]*?>|' + almostEverything + '))?)';\n\nconst attrSeeker = new RegExp(\n  tagName + attrName + attrPartials + '+)([ ' + spaces + ']*/?>)',\n  'g'\n);\n\nconst selfClosing = new RegExp(\n  tagName + attrName + attrPartials + '*)([ ' + spaces + ']*/>)',\n  'g'\n);\n\nexport {attrName, attrSeeker, selfClosing};\n","import {create, fragment, text} from './easy-dom.js';\n\nconst testFragment = fragment(document);\n\n// DOM4 node.append(...many)\nexport const hasAppend = 'append' in testFragment;\n\n// detect old browsers without HTMLTemplateElement content support\nexport const hasContent = 'content' in create(document, 'template');\n\n// IE 11 has problems with cloning templates: it \"forgets\" empty childNodes\ntestFragment.appendChild(text(testFragment, 'g'));\ntestFragment.appendChild(text(testFragment, ''));\nexport const hasDoomedCloneNode = testFragment.cloneNode(true).childNodes.length === 1;\n\n// old browsers need to fallback to cloneNode\n// Custom Elements V0 and V1 will work polyfilled\n// but native implementations need importNode instead\n// (specially Chromium and its old V0 implementation)\nexport const hasImportNode = 'importNode' in document;\n","import {attrName, attrSeeker} from './re.js';\n\nimport {\n  G,\n  ELEMENT_NODE,\n  OWNER_SVG_ELEMENT,\n  SVG_NAMESPACE,\n  UID,\n  UIDC\n} from './constants.js';\n\nimport {\n  hasAppend,\n  hasContent,\n  hasDoomedCloneNode,\n  hasImportNode\n} from './features-detection.js';\n\nimport {create, doc, fragment} from './easy-dom.js';\n\nimport {Map, WeakMap} from './poorlyfills.js';\n\n// appends an array of nodes\n// to a generic node/fragment\n// When available, uses append passing all arguments at once\n// hoping that's somehow faster, even if append has more checks on type\nexport const append = hasAppend ?\n  (node, childNodes) => {\n    node.append.apply(node, childNodes);\n  } :\n  (node, childNodes) => {\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      node.appendChild(childNodes[i]);\n    }\n  };\n\nconst findAttributes = new RegExp('(' + attrName + '=)([\\'\"]?)' + UIDC + '\\\\2', 'gi');\nconst comments = ($0, $1, $2, $3) =>\n  '<' + $1 + $2.replace(findAttributes, replaceAttributes) + $3;\nconst replaceAttributes = ($0, $1, $2) => $1 + ($2 || '\"') + UID + ($2 || '\"');\n\n// given a node and a generic HTML content,\n// create either an SVG or an HTML fragment\n// where such content will be injected\nexport const createFragment = (node, html) =>\n  (OWNER_SVG_ELEMENT in node ?\n    SVGFragment :\n    HTMLFragment\n  )(node, html.replace(attrSeeker, comments));\n\n// IE/Edge shenanigans proof cloneNode\n// it goes through all nodes manually\n// instead of relying the engine to suddenly\n// merge nodes together\nconst cloneNode = hasDoomedCloneNode ?\n  node => {\n    const clone = node.cloneNode();\n    const childNodes = node.childNodes ||\n                      // this is an excess of caution\n                      // but some node, in IE, might not\n                      // have childNodes property.\n                      // The following fallback ensure working code\n                      // in older IE without compromising performance\n                      // or any other browser/engine involved.\n                      /* istanbul ignore next */\n                      [];\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      clone.appendChild(cloneNode(childNodes[i]));\n    }\n    return clone;\n  } :\n  // the following ignore is due code-coverage\n  // combination of not having document.importNode\n  // but having a working node.cloneNode.\n  // This shenario is common on older Android/WebKit browsers\n  // but basicHTML here tests just two major cases:\n  // with document.importNode or with broken cloneNode.\n  /* istanbul ignore next */\n  node => node.cloneNode(true);\n\n// IE and Edge do not support children in SVG nodes\n/* istanbul ignore next */\nexport const getChildren = node => {\n  const children = [];\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  for (let i = 0; i < length; i++) {\n    if (childNodes[i].nodeType === ELEMENT_NODE)\n      children.push(childNodes[i]);\n  }\n  return children;\n};\n\n// used to import html into fragments\nexport const importNode = hasImportNode ?\n  (doc, node) => doc.importNode(node, true) :\n  (doc, node) => cloneNode(node)\n\n// just recycling a one-off array to use slice\n// in every needed place\nexport const slice = [].slice;\n\n// lazy evaluated, returns the unique identity\n// of a template literal, as tempalte literal itself.\n// By default, ES2015 template literals are unique\n// tag`a${1}z` === tag`a${2}z`\n// even if interpolated values are different\n// the template chunks are in a frozen Array\n// that is identical each time you use the same\n// literal to represent same static content\n// around its own interpolations.\nexport const unique = template => TL(template);\n\n// TL returns a unique version of the template\n// it needs lazy feature detection\n// (cannot trust literals with transpiled code)\nlet TL = t => {\n  if (\n    // TypeScript template literals are not standard\n    t.propertyIsEnumerable('raw') ||\n    (\n        // Firefox < 55 has not standard implementation neither\n        /Firefox\\/(\\d+)/.test((G.navigator || {}).userAgent) &&\n          parseFloat(RegExp.$1) < 55\n        )\n  ) {\n    const T = {};\n    TL = t => {\n      const k = '^' + t.join('^');\n      return T[k] || (T[k] = t);\n    };\n  } else {\n    // make TL an identity like function\n    TL = t => t;\n  }\n  return TL(t);\n};\n\n// used to store templates objects\n// since neither Map nor WeakMap are safe\nexport const TemplateMap = () => {\n  try {\n    const wm = new WeakMap;\n    const o_O = Object.freeze([]);\n    wm.set(o_O, true);\n    if (!wm.get(o_O))\n      throw o_O;\n    return wm;\n  } catch(o_O) {\n    // inevitable legacy code leaks due\n    // https://github.com/tc39/ecma262/pull/890\n    return new Map;\n  }\n};\n\n// create document fragments via native template\n// with a fallback for browsers that won't be able\n// to deal with some injected element such <td> or others\nconst HTMLFragment = hasContent ?\n  (node, html) => {\n    const container = create(node, 'template');\n    container.innerHTML = html;\n    return container.content;\n  } :\n  (node, html) => {\n    const container = create(node, 'template');\n    const content = fragment(node);\n    if (/^[^\\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(html)) {\n      const selector = RegExp.$1;\n      container.innerHTML = '<table>' + html + '</table>';\n      append(content, slice.call(container.querySelectorAll(selector)));\n    } else {\n      container.innerHTML = html;\n      append(content, slice.call(container.childNodes));\n    }\n    return content;\n  };\n\n// creates SVG fragment with a fallback for IE that needs SVG\n// within the HTML content\nconst SVGFragment = hasContent ?\n  (node, html) => {\n    const content = fragment(node);\n    const container = doc(node).createElementNS(SVG_NAMESPACE, 'svg');\n    container.innerHTML = html;\n    append(content, slice.call(container.childNodes));\n    return content;\n  } :\n  (node, html) => {\n    const content = fragment(node);\n    const container = create(node, 'div');\n    container.innerHTML = '<svg xmlns=\"' + SVG_NAMESPACE + '\">' + html + '</svg>';\n    append(content, slice.call(container.firstChild.childNodes));\n    return content;\n  };\n","import { append } from '../shared/utils.js';\nimport { doc, fragment } from '../shared/easy-dom.js';\n\nexport default function Wire(childNodes) {\n  this.childNodes = childNodes;\n  this.length = childNodes.length;\n  this.first = childNodes[0];\n  this.last = childNodes[this.length - 1];\n}\n\n// when a wire is inserted, all its nodes will follow\nWire.prototype.insert = function insert() {\n  const df = fragment(this.first);\n  append(df, this.childNodes);\n  return df;\n};\n\n// when a wire is removed, all its nodes must be removed as well\nWire.prototype.remove = function remove() {\n  const first = this.first;\n  const last = this.last;\n  if (this.length === 2) {\n    last.parentNode.removeChild(last);\n  } else {\n    const range = doc(first).createRange();\n    range.setStartBefore(this.childNodes[1]);\n    range.setEndAfter(last);\n    range.deleteContents();\n  }\n  return first;\n};\n","import {\n  COMMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n  ELEMENT_NODE\n} from '../shared/constants.js';\n\n// every template literal interpolation indicates\n// a precise target in the DOM the template is representing.\n// `<p id=${'attribute'}>some ${'content'}</p>`\n// hyperHTML finds only once per template literal,\n// hence once per entire application life-cycle,\n// all nodes that are related to interpolations.\n// These nodes are stored as indexes used to retrieve,\n// once per upgrade, nodes that will change on each future update.\n// A path example is [2, 0, 1] representing the operation:\n// node.childNodes[2].childNodes[0].childNodes[1]\n// Attributes are addressed via their owner node and their name.\nconst createPath = node => {\n  const path = [];\n  let parentNode;\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      parentNode = node;\n      break;\n    case COMMENT_NODE:\n      parentNode = node.parentNode;\n      prepend(path, parentNode, node);\n      break;\n    default:\n      parentNode = node.ownerElement;\n      break;\n  }\n  for (\n    node = parentNode;\n    (parentNode = parentNode.parentNode);\n    node = parentNode\n  ) {\n    prepend(path, parentNode, node);\n  }\n  return path;\n};\n\nconst prepend = (path, parent, node) => {\n  path.unshift(path.indexOf.call(parent.childNodes, node));\n};\n\nexport default {\n  create: (type, node, name) => ({type, name, node, path: createPath(node)}),\n  find: (node, path) => {\n    const length = path.length;\n    for (let i = 0; i < length; i++) {\n      node = node.childNodes[path[i]];\n    }\n    return node;\n  }\n}\n","// from https://github.com/developit/preact/blob/33fc697ac11762a1cb6e71e9847670d047af7ce5/src/constants.js\nconst IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n// style is handled as both string and object\n// even if the target is an SVG element (consistency)\nexport default (node, original, isSVG) => {\n  if (isSVG) {\n    const style = original.cloneNode(true);\n    style.value = '';\n    node.setAttributeNode(style);\n    return update(style, isSVG);\n  }\n  return update(node.style, isSVG);\n};\n\n// the update takes care or changing/replacing\n// only properties that are different or\n// in case of string, the whole node\nconst update = (style, isSVG) => {\n  let oldType, oldValue;\n  return newValue => {\n    switch (typeof newValue) {\n      case 'object':\n        if (newValue) {\n          if (oldType === 'object') {\n            if (!isSVG) {\n              if (oldValue !== newValue) {\n                for (const key in oldValue) {\n                  if (!(key in newValue)) {\n                    style[key] = '';\n                  }\n                }\n              }\n            }\n          } else {\n            if (isSVG) style.value = '';\n            else style.cssText = '';\n          }\n          const info = isSVG ? {} : style;\n          for (const key in newValue) {\n            const value = newValue[key];\n            info[key] = typeof value === 'number' &&\n                        !IS_NON_DIMENSIONAL.test(key) ?\n                          (value + 'px') : value;\n          }\n          oldType = 'object';\n          if (isSVG) style.value = toStyle((oldValue = info));\n          else oldValue = newValue;\n          break;\n        }\n      default:\n        if (oldValue != newValue) {\n          oldType = 'string';\n          oldValue = newValue;\n          if (isSVG) style.value = newValue || '';\n          else style.cssText = newValue || '';\n        }\n        break;\n    }\n  };\n};\n\nconst hyphen = /([^A-Z])([A-Z]+)/g;\nconst ized = ($0, $1, $2) => $1 + '-' + $2.toLowerCase();\nconst toStyle = object => {\n  const css = [];\n  for (const key in object) {\n    css.push(key.replace(hyphen, ized), ':', object[key], ';');\n  }\n  return css.join('');\n};\n","/* AUTOMATICALLY IMPORTED, DO NOT MODIFY */\n/*! (c) 2017 Andrea Giammarchi (ISC) */\n\n/**\n * This code is a revisited port of the snabbdom vDOM diffing logic,\n * the same that fuels as fork Vue.js or other libraries.\n * @credits https://github.com/snabbdom/snabbdom\n */\n\nconst eqeq = (a, b) => a == b;\n\nconst identity = O => O;\n\nconst remove = (get, parentNode, before, after) => {\n  if (after == null) {\n    parentNode.removeChild(get(before, -1));\n  } else {\n    const range = parentNode.ownerDocument.createRange();\n    range.setStartBefore(get(before, -1));\n    range.setEndAfter(get(after, -1));\n    range.deleteContents();\n  }\n};\n\nconst domdiff = (\n  parentNode,     // where changes happen\n  currentNodes,   // Array of current items/nodes\n  futureNodes,    // Array of future items/nodes\n  options         // optional object with one of the following properties\n                  //  before: domNode\n                  //  compare(generic, generic) => true if same generic\n                  //  node(generic) => Node\n) => {\n  if (!options)\n    options = {};\n  const compare = options.compare || eqeq;\n  const get = options.node || identity;\n  const before = options.before == null ? null : get(options.before, 0);\n  let currentStart = 0, futureStart = 0;\n  let currentEnd = currentNodes.length - 1;\n  let currentStartNode = currentNodes[0];\n  let currentEndNode = currentNodes[currentEnd];\n  let futureEnd = futureNodes.length - 1;\n  let futureStartNode = futureNodes[0];\n  let futureEndNode = futureNodes[futureEnd];\n  while (currentStart <= currentEnd && futureStart <= futureEnd) {\n    if (currentStartNode == null) {\n      currentStartNode = currentNodes[++currentStart];\n    }\n    else if (currentEndNode == null) {\n      currentEndNode = currentNodes[--currentEnd];\n    }\n    else if (futureStartNode == null) {\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else if (futureEndNode == null) {\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (compare(currentStartNode, futureStartNode)) {\n      currentStartNode = currentNodes[++currentStart];\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else if (compare(currentEndNode, futureEndNode)) {\n      currentEndNode = currentNodes[--currentEnd];\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (compare(currentStartNode, futureEndNode)) {\n      parentNode.insertBefore(\n        get(currentStartNode, 1),\n        get(currentEndNode, -0).nextSibling\n      );\n      currentStartNode = currentNodes[++currentStart];\n      futureEndNode = futureNodes[--futureEnd];\n    }\n    else if (compare(currentEndNode, futureStartNode)) {\n      parentNode.insertBefore(\n        get(currentEndNode, 1),\n        get(currentStartNode, 0)\n      );\n      currentEndNode = currentNodes[--currentEnd];\n      futureStartNode = futureNodes[++futureStart];\n    }\n    else {\n      let index = currentNodes.indexOf(futureStartNode);\n      if (index < 0) {\n        parentNode.insertBefore(\n          get(futureStartNode, 1),\n          get(currentStartNode, 0)\n        );\n        futureStartNode = futureNodes[++futureStart];\n      }\n      else {\n        let i = index;\n        let f = futureStart;\n        while (\n          i <= currentEnd &&\n          f <= futureEnd &&\n          currentNodes[i] === futureNodes[f]\n        ) {\n          i++;\n          f++;\n        }\n        if (1 < (i - index)) {\n          if (--index === currentStart) {\n            parentNode.removeChild(get(currentStartNode, -1));\n          } else {\n            remove(\n              get,\n              parentNode,\n              currentStartNode,\n              currentNodes[index]\n            );\n          }\n          currentStart = i;\n          futureStart = f;\n          currentStartNode = currentNodes[i];\n          futureStartNode = futureNodes[f];\n        } else {\n          const el = currentNodes[index];\n          currentNodes[index] = null;\n          parentNode.insertBefore(get(el, 1), get(currentStartNode, 0));\n          futureStartNode = futureNodes[++futureStart];\n        }\n      }\n    }\n  }\n  if (currentStart <= currentEnd || futureStart <= futureEnd) {\n    if (currentStart > currentEnd) {\n      const pin = futureNodes[futureEnd + 1];\n      const place = pin == null ? before : get(pin, 0);\n      if (futureStart === futureEnd) {\n        parentNode.insertBefore(get(futureNodes[futureStart], 1), place);\n      }\n      else {\n        const fragment = parentNode.ownerDocument.createDocumentFragment();\n        while (futureStart <= futureEnd) {\n          fragment.appendChild(get(futureNodes[futureStart++], 1));\n        }\n        parentNode.insertBefore(fragment, place);\n      }\n    }\n    else {\n      if (currentNodes[currentStart] == null)\n        currentStart++;\n      if (currentStart === currentEnd) {\n        parentNode.removeChild(get(currentNodes[currentStart], -1));\n      }\n      else {\n        remove(\n          get,\n          parentNode,\n          currentNodes[currentStart],\n          currentNodes[currentEnd]\n        );\n      }\n    }\n  }\n  return futureNodes;\n};\n\nexport default domdiff;\n","import {\n  CONNECTED, DISCONNECTED,\n  COMMENT_NODE, DOCUMENT_FRAGMENT_NODE, ELEMENT_NODE, TEXT_NODE,\n  OWNER_SVG_ELEMENT,\n  SHOULD_USE_TEXT_CONTENT,\n  UID, UIDC\n} from '../shared/constants.js';\n\nimport Component from '../classes/Component.js';\nimport Wire from '../classes/Wire.js';\nimport Path from './Path.js';\nimport Style from './Style.js';\nimport Intent from './Intent.js';\nimport domdiff from '../shared/domdiff.js';\n// see /^script$/i.test(nodeName) bit down here\n// import { create as createElement, text } from '../shared/easy-dom.js';\nimport { text } from '../shared/easy-dom.js';\nimport { Event, WeakSet, isArray, trim } from '../shared/poorlyfills.js';\nimport { createFragment, getChildren, slice } from '../shared/utils.js';\n\n// hyper.Component have a connected/disconnected\n// mechanism provided by MutationObserver\n// This weak set is used to recognize components\n// as DOM node that needs to trigger connected/disconnected events\nconst components = new WeakSet;\n\n// a basic dictionary used to filter already cached attributes\n// while looking for special hyperHTML values.\nfunction Cache() {}\nCache.prototype = Object.create(null);\n\n// returns an intent to explicitly inject content as html\nconst asHTML = html => ({html});\n\n// returns nodes from wires and components\nconst asNode = (item, i) => {\n  return 'ELEMENT_NODE' in item ?\n    item :\n    (item.constructor === Wire ?\n      // in the Wire case, the content can be\n      // removed, post-pended, inserted, or pre-pended and\n      // all these cases are handled by domdiff already\n      /* istanbul ignore next */\n      ((1 / i) < 0 ?\n        (i ? item.remove() : item.last) :\n        (i ? item.insert() : item.first)) :\n      asNode(item.render(), i));\n}\n\n// returns true if domdiff can handle the value\nconst canDiff = value =>  'ELEMENT_NODE' in value ||\nvalue instanceof Wire ||\nvalue instanceof Component;\n\n// updates are created once per context upgrade\n// within the main render function (../hyper/render.js)\n// These are an Array of callbacks to invoke passing\n// each interpolation value.\n// Updates can be related to any kind of content,\n// attributes, or special text-only cases such <style>\n// elements or <textarea>\nconst create = (root, paths) => {\n  const updates = [];\n  const length = paths.length;\n  for (let i = 0; i < length; i++) {\n    const info = paths[i];\n    const node = Path.find(root, info.path);\n    switch (info.type) {\n      case 'any':\n        updates.push(setAnyContent(node, []));\n        break;\n      case 'attr':\n        updates.push(setAttribute(node, info.name, info.node));\n        break;\n      case 'text':\n        updates.push(setTextContent(node));\n        node.textContent = '';\n        break;\n    }\n  }\n  return updates;\n};\n\n// finding all paths is a one-off operation performed\n// when a new template literal is used.\n// The goal is to map all target nodes that will be\n// used to update content/attributes every time\n// the same template literal is used to create content.\n// The result is a list of paths related to the template\n// with all the necessary info to create updates as\n// list of callbacks that target directly affected nodes.\nconst find = (node, paths, parts) => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    switch (child.nodeType) {\n      case ELEMENT_NODE:\n        findAttributes(child, paths, parts);\n        find(child, paths, parts);\n        break;\n      case COMMENT_NODE:\n        if (child.textContent === UID) {\n          parts.shift();\n          paths.push(\n            // basicHTML or other non standard engines\n            // might end up having comments in nodes\n            // where they shouldn't, hence this check.\n            SHOULD_USE_TEXT_CONTENT.test(node.nodeName) ?\n              Path.create('text', node) :\n              Path.create('any', child)\n          );\n        }\n        break;\n      case TEXT_NODE:\n        // the following ignore is actually covered by browsers\n        // only basicHTML ends up on previous COMMENT_NODE case\n        // instead of TEXT_NODE because it knows nothing about\n        // special style or textarea behavior\n        /* istanbul ignore if */\n        if (\n          SHOULD_USE_TEXT_CONTENT.test(node.nodeName) &&\n          trim.call(child.textContent) === UIDC\n        ) {\n          parts.shift();\n          paths.push(Path.create('text', node));\n        }\n        break;\n    }\n  }\n};\n\n// attributes are searched via unique hyperHTML id value.\n// Despite HTML being case insensitive, hyperHTML is able\n// to recognize attributes by name in a caseSensitive way.\n// This plays well with Custom Elements definitions\n// and also with XML-like environments, without trusting\n// the resulting DOM but the template literal as the source of truth.\n// IE/Edge has a funny bug with attributes and these might be duplicated.\n// This is why there is a cache in charge of being sure no duplicated\n// attributes are ever considered in future updates.\nconst findAttributes = (node, paths, parts) => {\n  const cache = new Cache;\n  const attributes = node.attributes;\n  const array = slice.call(attributes);\n  const remove = [];\n  const length = array.length;\n  for (let i = 0; i < length; i++) {\n    const attribute = array[i];\n    if (attribute.value === UID) {\n      const name = attribute.name;\n      // the following ignore is covered by IE\n      // and the IE9 double viewBox test\n      /* istanbul ignore else */\n      if (!(name in cache)) {\n        const realName = parts.shift().replace(/^(?:|[\\S\\s]*?\\s)(\\S+?)=['\"]?$/, '$1');\n        cache[name] = attributes[realName] ||\n                      // the following ignore is covered by browsers\n                      // while basicHTML is already case-sensitive\n                      /* istanbul ignore next */\n                      attributes[realName.toLowerCase()];\n        paths.push(Path.create('attr', cache[name], realName));\n      }\n      remove.push(attribute);\n    }\n  }\n  const len = remove.length;\n  for (let i = 0; i < len; i++) {\n    // Edge HTML bug #16878726\n    const attribute = remove[i];\n    if (/^id$/i.test(attribute.name))\n      node.removeAttribute(attribute.name);\n    // standard browsers would work just fine here\n    else\n      node.removeAttributeNode(remove[i]);\n  }\n\n  // This is a very specific Firefox/Safari issue\n  // but since it should be a not so common pattern,\n  // it's probably worth patching regardless.\n  // Basically, scripts created through strings are death.\n  // You need to create fresh new scripts instead.\n  // TODO: is there any other node that needs such nonsense?\n  const nodeName = node.nodeName;\n  if (/^script$/i.test(nodeName)) {\n    // this used to be like that\n    // const script = createElement(node, nodeName);\n    // then Edge arrived and decided that scripts created\n    // through template documents aren't worth executing\n    // so it became this ... hopefully it won't hurt in the wild\n    const script = document.createElement(nodeName);\n    for (let i = 0; i < attributes.length; i++) {\n      script.setAttributeNode(attributes[i].cloneNode(true));\n    }\n    script.textContent = node.textContent;\n    node.parentNode.replaceChild(script, node);\n  }\n};\n\n// when a Promise is used as interpolation value\n// its result must be parsed once resolved.\n// This callback is in charge of understanding what to do\n// with a returned value once the promise is resolved.\nconst invokeAtDistance = (value, callback) => {\n  callback(value.placeholder);\n  if ('text' in value) {\n    Promise.resolve(value.text).then(String).then(callback);\n  } else if ('any' in value) {\n    Promise.resolve(value.any).then(callback);\n  } else if ('html' in value) {\n    Promise.resolve(value.html).then(asHTML).then(callback);\n  } else {\n    Promise.resolve(Intent.invoke(value, callback)).then(callback);\n  }\n};\n\n// quick and dirty way to check for Promise/ish values\nconst isPromise_ish = value => value != null && 'then' in value;\n\n// in a hyper(node)`<div>${content}</div>` case\n// everything could happen:\n//  * it's a JS primitive, stored as text\n//  * it's null or undefined, the node should be cleaned\n//  * it's a component, update the content by rendering it\n//  * it's a promise, update the content once resolved\n//  * it's an explicit intent, perform the desired operation\n//  * it's an Array, resolve all values if Promises and/or\n//    update the node with the resulting list of content\nconst setAnyContent = (node, childNodes) => {\n  const diffOptions = {node: asNode, before: node};\n  let fastPath = false;\n  let oldValue;\n  const anyContent = value => {\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        if (fastPath) {\n          if (oldValue !== value) {\n            oldValue = value;\n            childNodes[0].textContent = value;\n          }\n        } else {\n          fastPath = true;\n          oldValue = value;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [text(node, value)],\n            diffOptions\n          );\n        }\n        break;\n      case 'object':\n      case 'undefined':\n        if (value == null) {\n          fastPath = false;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [],\n            diffOptions\n          );\n          break;\n        }\n      default:\n        fastPath = false;\n        oldValue = value;\n        if (isArray(value)) {\n          if (value.length === 0) {\n            if (childNodes.length) {\n              childNodes = domdiff(\n                node.parentNode,\n                childNodes,\n                [],\n                diffOptions\n              );\n            }\n          } else {\n            switch (typeof value[0]) {\n              case 'string':\n              case 'number':\n              case 'boolean':\n                anyContent({html: value});\n                break;\n              case 'object':\n                if (isArray(value[0])) {\n                  value = value.concat.apply([], value);\n                }\n                if (isPromise_ish(value[0])) {\n                  Promise.all(value).then(anyContent);\n                  break;\n                }\n              default:\n                childNodes = domdiff(\n                  node.parentNode,\n                  childNodes,\n                  value,\n                  diffOptions\n                );\n                break;\n            }\n          }\n        } else if (canDiff(value)) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            value.nodeType === DOCUMENT_FRAGMENT_NODE ?\n              slice.call(value.childNodes) :\n              [value],\n            diffOptions\n          );\n        } else if (isPromise_ish(value)) {\n          value.then(anyContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, anyContent);\n        } else if ('text' in value) {\n          anyContent(String(value.text));\n        } else if ('any' in value) {\n          anyContent(value.any);\n        } else if ('html' in value) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            slice.call(\n              createFragment(\n                node,\n                [].concat(value.html).join('')\n              ).childNodes\n            ),\n            diffOptions\n          );\n        } else if ('length' in value) {\n          anyContent(slice.call(value));\n        } else {\n          anyContent(Intent.invoke(value, anyContent));\n        }\n        break;\n    }\n  };\n  return anyContent;\n};\n\n// there are four kind of attributes, and related behavior:\n//  * events, with a name starting with `on`, to add/remove event listeners\n//  * special, with a name present in their inherited prototype, accessed directly\n//  * regular, accessed through get/setAttribute standard DOM methods\n//  * style, the only regular attribute that also accepts an object as value\n//    so that you can style=${{width: 120}}. In this case, the behavior has been\n//    fully inspired by Preact library and its simplicity.\nconst setAttribute = (node, name, original) => {\n  const isSVG = OWNER_SVG_ELEMENT in node;\n  let oldValue;\n  // if the attribute is the style one\n  // handle it differently from others\n  if (name === 'style') {\n    return Style(node, original, isSVG);\n  }\n  // the name is an event one,\n  // add/remove event listeners accordingly\n  else if (/^on/.test(name)) {\n    let type = name.slice(2);\n    if (type === CONNECTED || type === DISCONNECTED) {\n      if (notObserving) {\n        notObserving = false;\n        observe();\n      }\n      components.add(node);\n    }\n    else if (name.toLowerCase() in node) {\n      type = type.toLowerCase();\n    }\n    return newValue => {\n      if (oldValue !== newValue) {\n        if (oldValue) node.removeEventListener(type, oldValue, false);\n        oldValue = newValue;\n        if (newValue) node.addEventListener(type, newValue, false);\n      }\n    };\n  }\n  // the attribute is special ('value' in input)\n  // and it's not SVG *or* the name is exactly data,\n  // in this case assign the value directly\n  else if (name === 'data' || (!isSVG && name in node)) {\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (node[name] !== newValue) {\n          node[name] = newValue;\n          if (newValue == null) {\n            node.removeAttribute(name);\n          }\n        }\n      }\n    };\n  }\n  else if (name in Intent.attributes) {\n    return any => {\n      oldValue = Intent.attributes[name](node, any);\n      node.setAttribute(name, oldValue == null ? '' : oldValue);\n    };\n  }\n  // in every other case, use the attribute node as it is\n  // update only the value, set it as node only when/if needed\n  else {\n    let owner = false;\n    const attribute = original.cloneNode(true);\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (attribute.value !== newValue) {\n          if (newValue == null) {\n            if (owner) {\n              owner = false;\n              node.removeAttributeNode(attribute);\n            }\n            attribute.value = newValue;\n          } else {\n            attribute.value = newValue;\n            if (!owner) {\n              owner = true;\n              node.setAttributeNode(attribute);\n            }\n          }\n        }\n      }\n    };\n  }\n};\n\n// style or textareas don't accept HTML as content\n// it's pointless to transform or analyze anything\n// different from text there but it's worth checking\n// for possible defined intents.\nconst setTextContent = node => {\n  let oldValue;\n  const textContent = value => {\n    if (oldValue !== value) {\n      oldValue = value;\n      if (typeof value === 'object' && value) {\n        if (isPromise_ish(value)) {\n          value.then(textContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, textContent);\n        } else if ('text' in value) {\n          textContent(String(value.text));\n        } else if ('any' in value) {\n          textContent(value.any);\n        } else if ('html' in value) {\n          textContent([].concat(value.html).join(''));\n        } else if ('length' in value) {\n          textContent(slice.call(value).join(''));\n        } else {\n          textContent(Intent.invoke(value, textContent));\n        }\n      } else {\n        node.textContent = value == null ? '' : value;\n      }\n    }\n  };\n  return textContent;\n};\n\nexport default {create, find};\n\n// hyper.Components might need connected/disconnected notifications\n// used by components and their onconnect/ondisconnect callbacks.\n// When one of these callbacks is encountered,\n// the document starts being observed.\nlet notObserving = true;\nfunction observe() {\n\n  // when hyper.Component related DOM nodes\n  // are appended or removed from the live tree\n  // these might listen to connected/disconnected events\n  // This utility is in charge of finding all components\n  // involved in the DOM update/change and dispatch\n  // related information to them\n  const dispatchAll = (nodes, type) => {\n    const event = new Event(type);\n    const length = nodes.length;\n    for (let i = 0; i < length; i++) {\n      let node = nodes[i];\n      if (node.nodeType === ELEMENT_NODE) {\n        dispatchTarget(node, event);\n      }\n    }\n  };\n\n  // the way it's done is via the components weak set\n  // and recursively looking for nested components too\n  const dispatchTarget = (node, event) => {\n    if (components.has(node)) {\n      node.dispatchEvent(event);\n    }\n\n    /* istanbul ignore next */\n    const children = node.children || getChildren(node);\n    const length = children.length;\n    for (let i = 0; i < length; i++) {\n      dispatchTarget(children[i], event);\n    }\n  }\n\n  // The MutationObserver is the best way to implement that\n  // but there is a fallback to deprecated DOMNodeInserted/Removed\n  // so that even older browsers/engines can help components life-cycle\n  try {\n    (new MutationObserver(records => {\n      const length = records.length;\n      for (let i = 0; i < length; i++) {\n        let record = records[i];\n        dispatchAll(record.removedNodes, DISCONNECTED);\n        dispatchAll(record.addedNodes, CONNECTED);\n      }\n    })).observe(document, {subtree: true, childList: true});\n  } catch(o_O) {\n    document.addEventListener('DOMNodeRemoved', event => {\n      dispatchAll([event.target], DISCONNECTED);\n    }, false);\n    document.addEventListener('DOMNodeInserted', event => {\n      dispatchAll([event.target], CONNECTED);\n    }, false);\n  }\n}\n","import {Map, WeakMap} from '../shared/poorlyfills.js';\nimport {G, UIDC, VOID_ELEMENTS} from '../shared/constants.js';\nimport Updates from '../objects/Updates.js';\nimport {\n  createFragment,\n  importNode,\n  unique,\n  TemplateMap\n} from '../shared/utils.js';\n\nimport {selfClosing} from '../shared/re.js';\n\n// a weak collection of contexts that\n// are already known to hyperHTML\nconst bewitched = new WeakMap;\n\n// all unique template literals\nconst templates = TemplateMap();\n\n// better known as hyper.bind(node), the render is\n// the main tag function in charge of fully upgrading\n// or simply updating, contexts used as hyperHTML targets.\n// The `this` context is either a regular DOM node or a fragment.\nfunction render(template) {\n  const wicked = bewitched.get(this);\n  if (wicked && wicked.template === unique(template)) {\n    update.apply(wicked.updates, arguments);\n  } else {\n    upgrade.apply(this, arguments);\n  }\n  return this;\n}\n\n// an upgrade is in charge of collecting template info,\n// parse it once, if unknown, to map all interpolations\n// as single DOM callbacks, relate such template\n// to the current context, and render it after cleaning the context up\nfunction upgrade(template) {\n  template = unique(template);\n  const info =  templates.get(template) ||\n                createTemplate.call(this, template);\n  const fragment = importNode(this.ownerDocument, info.fragment);\n  const updates = Updates.create(fragment, info.paths);\n  bewitched.set(this, {template, updates});\n  update.apply(updates, arguments);\n  this.textContent = '';\n  this.appendChild(fragment);\n}\n\n// an update simply loops over all mapped DOM operations\nfunction update() {\n  const length = arguments.length;\n  for (let i = 1; i < length; i++) {\n    this[i - 1](arguments[i]);\n  }\n}\n\n// a template can be used to create a document fragment\n// aware of all interpolations and with a list\n// of paths used to find once those nodes that need updates,\n// no matter if these are attributes, text nodes, or regular one\nfunction createTemplate(template) {\n  const paths = [];\n  const html = template.join(UIDC).replace(SC_RE, SC_PLACE);\n  const fragment = createFragment(this, html);\n  Updates.find(fragment, paths, template.slice());\n  const info = {fragment, paths};\n  templates.set(template, info);\n  return info;\n}\n\n// some node could be special though, like a custom element\n// with a self closing tag, which should work through these changes.\nconst SC_RE = selfClosing;\nconst SC_PLACE = ($0, $1, $2) => {\n  return VOID_ELEMENTS.test($1) ? $0 : ('<' + $1 + $2 + '></' + $1 + '>');\n};\n\nexport default render;\n","import {ELEMENT_NODE, SVG_NAMESPACE} from '../shared/constants.js';\nimport {WeakMap, trim} from '../shared/poorlyfills.js';\nimport {fragment} from '../shared/easy-dom.js';\nimport {append, slice, unique} from '../shared/utils.js';\nimport Wire from '../classes/Wire.js';\nimport render from './render.js';\n\n// all wires used per each context\nconst wires = new WeakMap;\n\n// A wire is a callback used as tag function\n// to lazily relate a generic object to a template literal.\n// hyper.wire(user)`<div id=user>${user.name}</div>`; => the div#user\n// This provides the ability to have a unique DOM structure\n// related to a unique JS object through a reusable template literal.\n// A wire can specify a type, as svg or html, and also an id\n// via html:id or :id convention. Such :id allows same JS objects\n// to be associated to different DOM structures accordingly with\n// the used template literal without losing previously rendered parts.\nconst wire = (obj, type) => obj == null ?\n  content(type || 'html') :\n  weakly(obj, type || 'html');\n\n// A wire content is a virtual reference to one or more nodes.\n// It's represented by either a DOM node, or an Array.\n// In both cases, the wire content role is to simply update\n// all nodes through the list of related callbacks.\n// In few words, a wire content is like an invisible parent node\n// in charge of updating its content like a bound element would do.\nconst content = type => {\n  let wire, container, content, template, updates;\n  return function (statics) {\n    statics = unique(statics);\n    let setup = template !== statics;\n    if (setup) {\n      template = statics;\n      content = fragment(document);\n      container = type === 'svg' ?\n        document.createElementNS(SVG_NAMESPACE, 'svg') :\n        content;\n      updates = render.bind(container);\n    }\n    updates.apply(null, arguments);\n    if (setup) {\n      if (type === 'svg') {\n        append(content, slice.call(container.childNodes));\n      }\n      wire = wireContent(content);\n    }\n    return wire;\n  };\n};\n\n// wires are weakly created through objects.\n// Each object can have multiple wires associated\n// and this is thanks to the type + :id feature.\nconst weakly = (obj, type) => {\n  const i = type.indexOf(':');\n  let wire = wires.get(obj);\n  let id = type;\n  if (-1 < i) {\n    id = type.slice(i + 1);\n    type = type.slice(0, i) || 'html';\n  }\n  if (!wire) wires.set(obj, wire = {});\n  return wire[id] || (wire[id] = content(type));\n};\n\n// a document fragment loses its nodes as soon\n// as it's appended into another node.\n// This would easily lose wired content\n// so that on a second render call, the parent\n// node wouldn't know which node was there\n// associated to the interpolation.\n// To prevent hyperHTML to forget about wired nodes,\n// these are either returned as Array or, if there's ony one entry,\n// as single referenced node that won't disappear from the fragment.\n// The initial fragment, at this point, would be used as unique reference.\nconst wireContent = node => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  const wireNodes = [];\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    if (\n      child.nodeType === ELEMENT_NODE ||\n      trim.call(child.textContent).length !== 0\n    ) {\n      wireNodes.push(child);\n    }\n  }\n  return wireNodes.length === 1 ? wireNodes[0] : new Wire(wireNodes);\n};\n\nexport { content, weakly };\nexport default wire;\n","/*! (c) Andrea Giammarchi (ISC) */\n\nimport Component, {setup} from './classes/Component.js';\nimport Intent from './objects/Intent.js';\nimport wire, {content, weakly} from './hyper/wire.js';\nimport render from './hyper/render.js';\nimport diff from './shared/domdiff.js';\n\n// all functions are self bound to the right context\n// you can do the following\n// const {bind, wire} = hyperHTML;\n// and use them right away: bind(node)`hello!`;\nconst bind = context => render.bind(context);\nconst define = Intent.define;\n\nhyper.Component = Component;\nhyper.bind = bind;\nhyper.define = define;\nhyper.diff = diff;\nhyper.hyper = hyper;\nhyper.wire = wire;\n\n// the wire content is the lazy defined\n// html or svg property of each hyper.Component\nsetup(content);\n\n// everything is exported directly or through the\n// hyperHTML callback, when used as top level script\nexport {Component, bind, define, diff, hyper, wire};\n\n// by default, hyperHTML is a smart function\n// that \"magically\" understands what's the best\n// thing to do with passed arguments\nexport default function hyper(HTML) {\n  return arguments.length < 2 ?\n    (HTML == null ?\n      content('html') :\n      (typeof HTML === 'string' ?\n        hyper.wire(null, HTML) :\n        ('raw' in HTML ?\n          content('html')(HTML) :\n          ('nodeType' in HTML ?\n            hyper.bind(HTML) :\n            weakly(HTML, 'html')\n          )\n        )\n      )) :\n    ('raw' in HTML ?\n      content('html') : hyper.wire\n    ).apply(null, arguments);\n}\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, index) => {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, options),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? [encode(key, options), '[]'].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? encode(key, options) : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({decode: true, arrayFormat: 'none'}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = param.replace(/\\+/g, ' ').split('=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\treturn Object.keys(ret).sort().reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (obj, options) => {\n\tconst defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\toptions = Object.assign(defaults, options);\n\n\tif (options.sort === false) {\n\t\toptions.sort = () => {};\n\t}\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\treturn obj ? Object.keys(obj).sort(options.sort).map(key => {\n\t\tconst value = obj[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tconst result = [];\n\n\t\t\tfor (const value2 of value.slice()) {\n\t\t\t\tif (value2 === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, value2, result.length));\n\t\t\t}\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&') : '';\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: input.split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n","import fetch from 'isomorphic-fetch';\nimport hyperApp from 'hyperhtml-app'\nimport {hyper} from 'hyperhtml'\nimport * as qs from 'query-string'\n\nconst initialPath = '/' + location.search\n\nvar app = hyperApp();\n\n\napp.get('/', async (ctx, next) => {\n  const operationParameters = qs.parse(location.search)\n\n  if (operationParameters.code) {\n    const token = await getToken(operationParameters.code)\n    // console.log('saving token', token)\n    localStorage.setItem('token', token.data.Token);\n\n    app.navigate(operationParameters.state)\n  }\n\n  if (operationParameters.op) {\n    const operation = operationParameters.op\n    delete operationParameters.op\n    const operationResult = await runOperation(operation, operationParameters)\n    console.log(operationResult)\n  \n    if (operationResult.errors && operationResult.errors.length > 0) {\n      const error = operationResult.errors[0]\n      if (error.name === 'AuthError') {\n        const redirectToUrl = error.data.url\n        document.documentElement.className = 'notok';\n        hyper(document.getElementsByTagName('body')[0])`\n          <h3>${error.name}</h3>\n          <p>${error.message}</p>\n        `;\n        setTimeout(() => {\n          app.navigate(redirectToUrl);\n        }, 1000);\n      } else {\n        document.documentElement.className = 'notok';\n        hyper(document.getElementsByTagName('body')[0])`\n          <p>${error.message}</p>\n        `;\n      }\n    } else {\n      document.documentElement.className = 'ok';\n      hyper(document.getElementsByTagName('body')[0])`\n        <h3>${operation}</h3>\n        <p>Result: ${operationResult.data[operation]}</p>\n      `;      \n      // setTimeout(() => {\n      //   window.open('','_parent','');\n      //   window.close();\n      // }, 3000);\n    }\n    next()  \n  }\n});\n\n// app.get('/:operation', async function (ctx, next) {\n//   // console.log('Operation', ctx.params.operation);\n//   const operationParameters = qs.parse(location.search)\n//   // console.log(operationParameters)\n//   const operationResult = await runOperation(ctx.params.operation, operationParameters)\n//   console.log(operationResult)\n\n//   if (operationResult.errors && operationResult.errors.length > 0) {\n//     const error = operationResult.errors[0]\n//     if (error.name === 'AuthError') {\n//       const redirectToUrl = error.data.url\n//       document.documentElement.className = 'notok';\n//       hyper(document.getElementsByTagName('body')[0])`\n//         <h3>${error.name}</h3>\n//         <p>${error.message}</p>\n//       `;\n//       setTimeout(() => {\n//         app.navigate(redirectToUrl);\n//       }, 1000);\n//     } else {\n//       document.documentElement.className = 'notok';\n//       hyper(document.getElementsByTagName('body')[0])`\n//         <p>${error.message}</p>\n//       `;\n//     }\n//   } else {\n//     document.documentElement.className = 'ok';\n//     hyper(document.getElementsByTagName('body')[0])`\n//       <h3>${ctx.params.operation}</h3>\n//       <p>Result: ${operationResult.data[ctx.params.operation]}</p>\n//     `;      \n//     // setTimeout(() => {\n//     //   window.open('','_parent','');\n//     //   window.close();\n//     // }, 3000);\n//   }\n//   next()\n// });\n\n// app.param('user', function (ctx, next, name) {\n//   console.log(name); // hyper\n// });\n\napp.navigate(initialPath);\n\n\nfunction runOperation(operation, params) {\n  let operationParams = ''\n  if (Object.keys(params).length > 0) {\n    operationParams = `( ${Object.keys(params).map(key => `${key}: \"${params[key]}\"`).join(\" \")} )`\n  }\n\n  // console.log(`{ ${operation}( ${Object.keys(params).map(key => `${key}: \"${params[key]}`).join(\" \")} ) }`)\n  return requestOperation(`{ ${operation} ${operationParams} }`, null);\n}\n\nfunction getToken(code) {\n  return requestOperation(`{ Token(code:\"${code}\") }`, null)\n}\n\nfunction requestOperation(query, variables) {\n  const token = localStorage.getItem('token')\n  console.log(token)\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    },\n\t\tbody: JSON.stringify({\n\t\t\tquery: query,\n\t\t\tvariables: variables\n\t\t})\n\t};\n\n\treturn fetch(\"http://localhost:8010\", options)\n\t\t.then(function(res) {\n\t\t\treturn res.json();\n\t\t}).then(function(json) {\n\t\t\t// console.log('got token data', json);\n\n\t\t\treturn json;\n\t\t}).catch((err) => {\n\t\t\tconsole.log('data error', err);\n\t\t});\n\n}\n"]}